# 용어 및 개념들
## 클래스
- 객체를 만들어 내기 위한 설계도
- 속성(ex. 제조사, 모델번호,색깔) + 오퍼레이션(ex. 감속하다, 가속하다) 
- 속성->변수로 오퍼레이션 -> 메쏘드로 구현된다. 

## 객체
- 소프트웨어 세에 구현할 대상

## 인스턴스
- 설계도를 통해 소프트웨어 세계에 구현된 구체적인 실체

---

# 객체지향 원리 4가지 개념
1. Abstraction(추상화)
- 객체표현에 필요한 요소(속성, 오퍼레이션 요소)에만 집중 그외는 생략
- 간결성과 표현성이 중요

2. Encapsulation(캡슐화)
- 속성과 오퍼레이션들에서 어떤 것을 외부에 공개 / 공개x 지정
- 중요한것은 외부 접근을 막아 손상 방지

3. Inheritance(상속성)
- 클래스간의 is-a 관계 -> 기존의 개발된 클래스를 이용하여 새로운 것 정의
- 코드의 재사용성 확장성을 높임

4. polymorphism(다형성)
- 같으면서 다른것, 다르면서 같은 것 (동일한 외부적인 특징을 가지는 객체들이 서로 다른 내부 구조를 가지는 것을 처리하기 위한 개념) -> 소프트웨어가 복잡해지면 
- ex) 교통수단 -> 자전거,자동차,배,비행기

